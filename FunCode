import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;


public class Main {
	
	
	public static int A(int[] arr, int i) {
		if(i<3) {
		return arr[i] + A(arr,i++);
		}
		return 0;
	}
	
	 public static int factorial(int n) throws IllegalArgumentException {
		 if (n < 0)
		 throw new IllegalArgumentException( ); // argument must be nonnegative
		 else if (n == 0)
		 return 1; // base case
		 else
		 return n * factorial(n-1); // recursive case
		 }
	 
	 
	 /* Draws an English ruler for the given number of inches and major tick length. */
	  public static void drawRuler(int nInches, int majorLength) {
	  drawLine(majorLength, 0); // draw inch 0 line and label
	  for (int j = 1; j <= nInches; j++) {
	  drawInterval(majorLength - 1); // draw interior ticks for inch
	  drawLine(majorLength, j); // draw inch j line and label
	  }
	  }
	  private static void drawInterval(int centralLength) {
	  if (centralLength >= 1) { // otherwise, do nothing
	  drawInterval(centralLength - 1); // recursively draw top interval
	  drawLine(centralLength); // draw center tick line (without label)
	  drawInterval(centralLength - 1); // recursively draw bottom interval
	  }
	  }
	  private static void drawLine(int tickLength, int tickLabel) {
	  for (int j = 0; j < tickLength; j++)
	  System.out.print("-");
	  if (tickLabel >= 0)
	  System.out.print(" " + tickLabel);
	  System.out.print("\n");
	  }
	  /* Draws a line with the given tick length (but no label). */
	  private static void drawLine(int tickLength) {
	  drawLine(tickLength, -1);
	  }
	 
	public static void main(String[] args) {
		// TODO Auto-generated method stub
	     double Haveratio;
	     int surplus=64;
	     int demand=40;
	     Haveratio = (double)demand/surplus;
	     System.out.println(Haveratio);
		Stack s = new Stack();
		for(int t=0 ;t<10;t++) {
			s.push(t);
		}
		System.out.println(s.size());
		s.push("jrebjeb");
		System.out.println(s.pop()); 
		s.pop();
		System.out.println(s.size());
		
		Scanner st = new Scanner(System.in);
		String some = st.nextLine();
		Stack r = new Stack();
		for(int i=0;i<some.length();i++) {r.push(some.charAt(i));}
		for(int i=0;i<some.length();i++) {System.out.print(r.pop());}
		
		
		Queue<String> q= new LinkedList<String>() ;
		q.add("owmcowecm");
		for(int t=0 ;t<10;t++) {
			String sth = "Number "+t;
			q.add(sth);
		}
		System.out.println("\n"+q.element());
		for(int i =0;i<4;i++)System.out.println(q.poll());
		
		System.out.println(factorial(5));
     	drawRuler(5,5);
     	
     	
	}
	
	

}
